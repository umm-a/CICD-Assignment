on: [push, pull_request]

jobs: 
  unit-tests:
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with: 
        java-version: 17
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make Gradlew Executable
      run: |
          chmod +x ./gradlew

    - name: Run unit tests
      run: ./gradlew test

  integration-tests:
   runs-on: ubuntu-latest

   steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make Gradlew Executable
      run: |
        chmod +x ./gradlew

    - name: Run integration tests
      run: ./gradlew integrationTest

  docker: 
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.MARIAS_SECRET }}
      - name: Build image
        run: docker build -t ghcr.io/umm-a/cicd-assignment:${{ github.head_ref }} -f Dockerfile .
      - name: Push image
        run: docker push ghcr.io/umm-a/cicd-assignment:${{ github.head_ref }}

  fake-deployment: 
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fake Deploy - Display Docker image name
        run: "echo Docker image would be: $IMAGE"
        env:
         IMAGE: ${{ github.repository }}:${{ github.head_ref }}"
